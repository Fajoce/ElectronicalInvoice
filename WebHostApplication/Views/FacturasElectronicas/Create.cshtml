@model WebHostApplication.ViewModels.Facturas.FacturaCreateDTO

@{
    ViewData["Title"] = "Crear Factura";
}
<div class="container mt-4">

    <!-- 🔹 Mensaje de éxito -->
@if (TempData["Success"] != null)
{
        <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}

<div class="card shadow p-4">
    <h2 class="mb-4 text-primary">
        <i class="bi bi-file-earmark-plus"></i> Crear Factura
    </h2>

    <form asp-action="Create" method="post">
        <!-- Encabezado de factura -->
        <div class="row mb-3">
            <div class="col-md-3">
                <label class="form-label">Cliente</label>
                @Html.DropDownListFor(
                m => m.IdCliente,
                                (SelectList)ViewData["Clientes"] ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                                "-- Seleccione cliente --",
                                new { @class = "form-select" }
                                )
            </div>
            <div class="col-md-3">
                <label class="form-label">Cliente 2 (opcional)</label>
                @Html.DropDownListFor(
                                m => m.IdCliente2,
                                (SelectList)ViewData["Clientes2"] ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                                "-- Ninguno --",
                                new { @class = "form-select" }
                                )
            </div>
            <div class="col-md-3">
                <label class="form-label">Vendedor</label>
                @Html.DropDownListFor(
                                m => m.IdVendedor,
                                (SelectList)ViewData["Vendedores"] ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                                "-- Seleccione vendedor --",
                                new { @class = "form-select" }
                                )
            </div>
            <div class="col-md-3">
                <label class="form-label">Cajero</label>
                @Html.DropDownListFor(
                                m => m.IdCajero,
                                (SelectList)ViewData["Cajeros"] ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                                "-- Seleccione cajero --",
                                new { @class = "form-select" }
                                )
            </div>
                <input type="hidden" asp-for="Pedido" />
        </div>

        <!-- Métodos de pago -->
        <div class="row g-3 mb-4">
            <div class="col"><label class="form-label">Efectivo</label><input asp-for="Efectivo" class="form-control" type="number" step="0.01" /></div>
            <div class="col"><label class="form-label">Dinero</label><input asp-for="Dinero" class="form-control" type="number" step="0.01" /></div>
            <div class="col"><label class="form-label">T. Crédito</label><input asp-for="Tcredito" class="form-control" type="number" step="0.01" /></div>
            <div class="col"><label class="form-label">T. Débito</label><input asp-for="Tdebito" class="form-control" type="number" step="0.01" /></div>
            <div class="col"><label class="form-label">Transferencia</label><input asp-for="Transferencia" class="form-control" type="number" step="0.01" /></div>
            <div class="col"><label class="form-label">Crédito</label><input asp-for="Credito" class="form-control" type="number" step="0.01" /></div>
        </div>

        <!-- Tabla de detalles -->
        <h4 class="mt-4 mb-3">Detalles de Productos</h4>
        <table class="table table-bordered table-striped table-hover" id="detallesTable">
            <thead class="table-light">
                <tr>
                        <th>IdProducto</th>
                    <th>Producto</th>
                    <th>Código</th>
                    <th>Referencia</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Subtotal</th>
                    <th>Existencia</th>
                    <th>Costo</th>
                   
                    <th>Vendedor</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Detalles.Count; i++)
    {
        <tr>
            <td>
                                @Html.DropDownListFor(
                                m => m.Detalles[i].IdProducto,
                                                        (SelectList)ViewData["Productos"],
                                                        "-- Seleccione producto --",
                                                        new { @class = "form-select producto-select", onchange = "loadProductData(this)" }
                                                        )
            </td>
             <td><input name="Detalles[@i].IdProducto" value="@Model.Detalles[i].CodigoFijo" class="form-control idProducto" /></td>
            <td><input name="Detalles[@i].CodigoFijo" value="@Model.Detalles[i].CodigoFijo" class="form-control codigoFijo" /></td>
            <td><input name="Detalles[@i].Referencia" value="@Model.Detalles[i].Referencia" class="form-control referencia" /></td>
            <td><input name="Detalles[@i].Descripcion" value="@Model.Detalles[i].Descripcion" class="form-control descripcion" /></td>
            <td><input asp-for="Detalles[@i].Precio" class="form-control precio" type="number" step="0.01" onchange="updateSubtotal(this)" /></td> 
            <td><input asp-for="Detalles[@i].Cantidad" class="form-control cantidad" type="number" min="1" onchange="updateSubtotal(this)" /></td>    
            <td><input asp-for="Detalles[@i].Subtotal" class="form-control subtotal" readonly /></td>
           <td><input name="Detalles[@i].Exis" value="@Model.Detalles[i].Exis" class="form-control existencia" readonly /></td>
            <td><input name="Detalles[@i].Costo" value="@Model.Detalles[i].Costo" class="form-control costo" /></td>
            <td>
                            @Html.DropDownListFor(
                                                        m => m.IdVendedor,
                                                        (SelectList)ViewData["Vendedores2"] ?? new SelectList(Enumerable.Empty<SelectListItem>()),
                                                        "-- Seleccione vendedor --",
                                                        new { @class = "form-select" }
                                                        )
            </td>
            <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)"><i class="bi bi-x"></i></button></td>
        </tr>
    }
        </table>

        <div class="d-flex justify-content-between align-items-center mb-4">
            <button type="button" class="btn btn-secondary" onclick="addRow()">
                <i class="bi bi-plus-circle"></i> Agregar producto
            </button>
            <div class="text-end">
                <h4 class="text-primary">
                    Total general: $<span id="totalGeneral">0.00</span>
                </h4>
            </div>
        </div>


        <div class="text-end">
            <button type="submit" class="btn btn-primary btn-lg">
                <i class="bi bi-save"></i> Guardar Factura
            </button>
            
        </div>
    </form>
</div>

@section Scripts {
    <script>
        async function loadProductData(select) {
            var productId = select.value;
            if (!productId) return;

            let response = await fetch('/Productos/GetById/' + productId);
            if (response.ok) {
                let data = await response.json();
                var row = select.closest("tr");

                row.querySelector(".codigoFijo").value = data.id ?? "";
                row.querySelector(".referencia").value = data.rf ?? "";
                row.querySelector(".descripcion").value = data.descripcion ?? "";
                row.querySelector(".precio").value = data.precio1 ?? 0;
                row.querySelector(".costo").value = data.costo ?? 0;
                row.querySelector(".existencia").value = data.existencia ?? 0;

                updateSubtotal(row.querySelector(".precio"));
            }
        }

        function updateSubtotal(input) {
            var row = input.closest("tr");
            var precio = parseFloat(row.querySelector(".precio").value) || 0;
            var cantidad = parseFloat(row.querySelector(".cantidad").value) || 0;
            var subtotal = precio * cantidad;

            row.querySelector(".subtotal").value = subtotal.toFixed(2);

            updateTotalGeneral(); // 🔹 recalcula el total general
        }

        function updateTotalGeneral() {
            var total = 0;
            document.querySelectorAll(".subtotal").forEach(sub => {
                total += parseFloat(sub.value) || 0;
            });

            document.getElementById("totalGeneral").innerText = total.toFixed(2);
        }

        function removeRow(btn) {
            var tbody = btn.closest("tbody");
            btn.closest("tr").remove();
            updateTotalGeneral(); // 🔹 actualiza total al eliminar
        }

        function addRow() {
            var table = document.getElementById("detallesTable").getElementsByTagName("tbody")[0];
            var rowCount = table.rows.length;
            var newRow = table.rows[0].cloneNode(true);

            newRow.querySelectorAll("input").forEach(inp => inp.value = "");
            newRow.querySelectorAll("select").forEach(sel => sel.selectedIndex = 0);

            newRow.querySelectorAll("input, select").forEach(el => {
                if (el.name) el.name = el.name.replace(/\[\d+\]/, "[" + rowCount + "]");
            });

            table.appendChild(newRow);
        }
    </script>
}